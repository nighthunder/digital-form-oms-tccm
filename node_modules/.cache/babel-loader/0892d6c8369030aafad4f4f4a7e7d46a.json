{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\digital-form-oms-tccm\\\\react\\\\src\\\\pages\\\\listSurvey\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport api from '../../services/api';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport './styles.css';\nimport { connect } from 'react-redux';\n\nfunction listSurvey({\n  user\n}) {\n  const location = useLocation();\n  const history = useHistory();\n  const [questionnaires, setQuestionnaires] = useState([]);\n  useEffect(() => {\n    async function loadQuestionnaires() {\n      const response = await api.get('/survey');\n      setQuestionnaires(response.data);\n    }\n\n    loadQuestionnaires();\n  }, []);\n\n  function getPtBrDate(somedate) {\n    //var today = new Date();\n    var dd = String(somedate.getDate()).padStart(2, '0');\n    var mm = String(somedate.getMonth() + 1).padStart(2, '0');\n    var yyyy = somedate.getFullYear();\n    return dd + '/' + mm + '/' + yyyy;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Cria\\xE7\\xE3o e edite pesquisas\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pesquisas-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, \"PESQUISA\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"VER.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, \"STATUS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, \"CRIADO EM\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, \"MODIFICADO EM\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, questionnaires.map(q => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, q.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, q.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, q.questionnaireStatus), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, getPtBrDate(new Date(q.creationDate))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, getPtBrDate(new Date(q.lastModification)))))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"add-prontuario add-pesquisa\",\n    onClick: () => {\n      history.push('/add-prontuario', {\n        hospitalIndex: location.state.hospitalIndex\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), \"Adicionar nova Pesquisa\"));\n}\n\nexport default Pesquisa;","map":{"version":3,"sources":["D:/xampp/htdocs/digital-form-oms-tccm/react/src/pages/listSurvey/index.js"],"names":["React","useState","useEffect","useHistory","useLocation","api","Button","TextField","CircularProgress","Add","Edit","connect","listSurvey","user","location","history","questionnaires","setQuestionnaires","loadQuestionnaires","response","get","data","getPtBrDate","somedate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","map","q","description","version","questionnaireStatus","Date","creationDate","lastModification","push","hospitalIndex","state","Pesquisa"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport api from '../../services/api';\r\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\r\nimport { Add, Edit } from '@material-ui/icons';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nfunction listSurvey({user}) {\r\n\r\n    const location = useLocation();\r\n\r\n    const history = useHistory();\r\n\r\n    const [questionnaires, setQuestionnaires] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadQuestionnaires() {\r\n            const response = await api.get('/survey');\r\n            setQuestionnaires(response.data);\r\n        }\r\n        loadQuestionnaires();\r\n\r\n    }, [])\r\n\r\n    function getPtBrDate(somedate) {\r\n        //var today = new Date();\r\n        var dd = String(somedate.getDate()).padStart(2, '0');\r\n        var mm = String(somedate.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = somedate.getFullYear();\r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n\r\n\treturn (\r\n            <div className=\"pesquisa\">\r\n\t\t\t\t<h2>Criação e edite pesquisas</h2>\r\n               \r\n                <div className=\"pesquisas-list\">\r\n                    <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>PESQUISA</th>\r\n                                    <th>VER.</th> \r\n                                    <th>STATUS</th>\r\n                                    <th>CRIADO EM</th> \r\n                                    <th>MODIFICADO EM</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                questionnaires.map(q => ( \r\n                                    <tr>\r\n                                        <td>{q.description}</td>\r\n                                        <td>{q.version}</td>\r\n                                        <td>{q.questionnaireStatus}</td>\r\n                                        <td>{getPtBrDate(new Date(q.creationDate))}</td> \r\n                                        <td>{getPtBrDate(new Date(q.lastModification))}</td> \r\n                                    </tr>\r\n                            \r\n                                 ))\r\n                             }\r\n                             </tbody>\r\n                            \r\n                    </table>\r\n                </div>\r\n                <Button variant=\"outlined\" color=\"primary\" className=\"add-prontuario add-pesquisa\" onClick={ () => {\r\n                    history.push('/add-prontuario', { hospitalIndex: location.state.hospitalIndex })\r\n                }}>\r\n                    <Add color=\"primary\" />\r\n                    Adicionar nova Pesquisa\r\n                </Button>\r\n\t\t\t</div>\r\n\r\n     );\r\n\r\n}\r\n\r\nexport default Pesquisa;"]},"metadata":{},"sourceType":"module"}