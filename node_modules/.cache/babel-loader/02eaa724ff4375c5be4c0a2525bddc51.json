{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\digital-form-oms-tccm\\\\react\\\\src\\\\pages\\\\ListSurvey\\\\index.js\";\n// Lista de todas as pesquisas\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport api from '../../services/api';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport './styles.css';\nimport { connect } from 'react-redux';\n\nfunction ListSurvey(_ref) {\n  let {\n    user,\n    hospital\n  } = _ref;\n  const location = useLocation();\n  const history = useHistory();\n  const [questionnaires, setQuestionnaires] = useState([]);\n  useEffect(() => {\n    async function loadQuestionnaires() {\n      const response = await api.get('/survey');\n      setQuestionnaires(response.data);\n    }\n\n    loadQuestionnaires();\n  }, []);\n\n  function getPtBrDate(somedate) {\n    //var today = new Date();\n    var dd = String(somedate.getDate()).padStart(2, '0');\n    var mm = String(somedate.getMonth() + 1).padStart(2, '0');\n    var yyyy = somedate.getFullYear();\n    return dd + '/' + mm + '/' + yyyy;\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container containerWider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Crie e edite pesquisas: crie, versione, copie, edite e publique\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Gerencie as pesquisas\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"surveys-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  }, \"PESQUISA\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, \"VER.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \"STATUS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }\n  }, \"CRIADO EM\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 41\n    }\n  }, \"MODIFICADO EM\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, \"EDITAR\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, questionnaires.map(q => /*#__PURE__*/React.createElement(\"tr\", {\n    key: q.questionnaireID,\n    \"data-key\": q.questionnaireID,\n    onClick: () => {\n      history.push('/show-survey/', {\n        questionnaireID: q.questionnaireID,\n        description: q.description,\n        version: q.version,\n        questionnaireStatus: q.questionnaireStatus,\n        lastModification: getPtBrDate(new Date(q.lastModification)),\n        creationDate: getPtBrDate(new Date(q.creationDate))\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }, q.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, q.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }, q.questionnaireStatus), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 45\n    }\n  }, getPtBrDate(new Date(q.creationDate))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, getPtBrDate(new Date(q.lastModification))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 49\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"add-survey\",\n    onClick: () => {\n      history.push('/add-survey');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), \"Adicionar nova pesquisa\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))));\n}\n\nexport default connect(state => ({\n  user: state.user\n}))(ListSurvey);","map":{"version":3,"sources":["D:/xampp/htdocs/digital-form-oms-tccm/react/src/pages/ListSurvey/index.js"],"names":["React","useState","useEffect","useHistory","useLocation","api","Button","TextField","CircularProgress","Add","Edit","connect","ListSurvey","user","hospital","location","history","questionnaires","setQuestionnaires","loadQuestionnaires","response","get","data","getPtBrDate","somedate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","map","q","questionnaireID","push","description","version","questionnaireStatus","lastModification","Date","creationDate","state"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,gBAA5B,QAAoD,mBAApD;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAO,cAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,UAAT,OAAsC;AAAA,MAAlB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAkB;AAElC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,OAAO,GAAGb,UAAU,EAA1B;AAEA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,kBAAf,GAAoC;AAChC,YAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAQ,SAAR,CAAvB;AACAH,MAAAA,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAjB;AACH;;AACDH,IAAAA,kBAAkB;AAErB,GAPQ,EAON,EAPM,CAAT;;AASA,WAASI,WAAT,CAAqBC,QAArB,EAA+B;AAC3B;AACA,QAAIC,EAAE,GAAGC,MAAM,CAACF,QAAQ,CAACG,OAAT,EAAD,CAAN,CAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACF,QAAQ,CAACM,QAAT,KAAsB,CAAvB,CAAN,CAAgCF,QAAhC,CAAyC,CAAzC,EAA4C,GAA5C,CAAT;AACA,QAAIG,IAAI,GAAGP,QAAQ,CAACQ,WAAT,EAAX;AACA,WAAOP,EAAE,GAAG,GAAL,GAAWI,EAAX,GAAgB,GAAhB,GAAsBE,IAA7B;AACH;;AAEJ,sBACW;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADQ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,CADR,eAWQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,cAAc,CAACgB,GAAf,CAAmBC,CAAC,iBAChB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,eAAX;AAA4B,gBAAUD,CAAC,CAACC,eAAxC;AAAyD,IAAA,OAAO,EAAG,MAAM;AACzEnB,MAAAA,OAAO,CAACoB,IAAR,CAAa,eAAb,EACA;AACAD,QAAAA,eAAe,EAAED,CAAC,CAACC,eADnB;AAEAE,QAAAA,WAAW,EAAGH,CAAC,CAACG,WAFhB;AAGAC,QAAAA,OAAO,EAAGJ,CAAC,CAACI,OAHZ;AAIAC,QAAAA,mBAAmB,EAAGL,CAAC,CAACK,mBAJxB;AAKAC,QAAAA,gBAAgB,EAAEjB,WAAW,CAAC,IAAIkB,IAAJ,CAASP,CAAC,CAACM,gBAAX,CAAD,CAL7B;AAMAE,QAAAA,YAAY,EAAEnB,WAAW,CAAC,IAAIkB,IAAJ,CAASP,CAAC,CAACQ,YAAX,CAAD;AANzB,OADA;AASC,KAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,CAAC,CAACG,WAAP,CAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,OAAP,CAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,CAAC,CAACK,mBAAP,CAbJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,WAAW,CAAC,IAAIkB,IAAJ,CAASP,CAAC,CAACQ,YAAX,CAAD,CAAhB,CAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,WAAW,CAAC,IAAIkB,IAAJ,CAASP,CAAC,CAACM,gBAAX,CAAD,CAAhB,CAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAhBJ,CADJ,CAFJ,CAXR,CADJ,eAuCI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,SAAS,EAAC,YAArD;AAAkE,IAAA,OAAO,EAAG,MAAM;AAClFxB,MAAAA,OAAO,CAACoB,IAAR,CAAa,aAAb;AACC,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,4BAvCJ,eA6CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,CALJ,CADJ,CADX;AA0DA;;AAED,eAAezB,OAAO,CAACgC,KAAK,KAAK;AAAE9B,EAAAA,IAAI,EAAE8B,KAAK,CAAC9B;AAAd,CAAL,CAAN,CAAP,CAAyCD,UAAzC,CAAf","sourcesContent":["// Lista de todas as pesquisas\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport api from '../../services/api';\r\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\r\nimport { Add, Edit } from '@material-ui/icons';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ListSurvey({user, hospital}) {\r\n\r\n    const location = useLocation();\r\n\r\n    const history = useHistory();\r\n\r\n    const [questionnaires, setQuestionnaires] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadQuestionnaires() {\r\n            const response = await api.get('/survey');\r\n            setQuestionnaires(response.data);\r\n        }\r\n        loadQuestionnaires();\r\n\r\n    }, [])\r\n\r\n    function getPtBrDate(somedate) {\r\n        //var today = new Date();\r\n        var dd = String(somedate.getDate()).padStart(2, '0');\r\n        var mm = String(somedate.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = somedate.getFullYear();\r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n\r\n\treturn (\r\n            <main className=\"container containerWider\">\r\n                <div className=\"survey\">\r\n\t\t\t\t    <h2>Crie e edite pesquisas: crie, versione, copie, edite e publique</h2>\r\n                    <div className=\"survey-details\">\r\n                        Gerencie as pesquisas\r\n                    </div>\r\n                    <div className=\"surveys-list\">\r\n                        <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>PESQUISA</th>\r\n                                        <th>VER.</th> \r\n                                        <th>STATUS</th>\r\n                                        <th>CRIADO EM</th> \r\n                                        <th>MODIFICADO EM</th> \r\n                                        <th>EDITAR</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    questionnaires.map(q => ( \r\n                                        <tr key={q.questionnaireID} data-key={q.questionnaireID} onClick={ () => {\r\n                                        history.push('/show-survey/', \r\n                                        {\r\n                                        questionnaireID: q.questionnaireID, \r\n                                        description : q.description,\r\n                                        version : q.version,\r\n                                        questionnaireStatus : q.questionnaireStatus,\r\n                                        lastModification: getPtBrDate(new Date(q.lastModification)),\r\n                                        creationDate: getPtBrDate(new Date(q.creationDate))\r\n                                        })\r\n                                        }}>\r\n                                            <td>{q.description}</td>\r\n                                            <td>{q.version}</td>\r\n                                            <td>{q.questionnaireStatus}</td>\r\n                                            <td>{getPtBrDate(new Date(q.creationDate))}</td> \r\n                                            <td>{getPtBrDate(new Date(q.lastModification))}</td> \r\n                                            <td><Edit /></td>\r\n                                        </tr>\r\n                            \r\n                                     ))\r\n                                 }\r\n                                 </tbody>\r\n                            \r\n                        </table>\r\n                        <Button variant=\"outlined\" color=\"primary\" className=\"add-survey\" onClick={ () => {\r\n                        history.push('/add-survey')\r\n                        }}>\r\n                        <Add color=\"primary\" />\r\n                        Adicionar nova pesquisa\r\n                        </Button>\r\n                        <br/>\r\n                    </div>\r\n\t\t\t    </div>\r\n            </main>\r\n     );\r\n\r\n}\r\n\r\nexport default connect(state => ({ user: state.user }))(ListSurvey);"]},"metadata":{},"sourceType":"module"}