{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\digital-form-oms-tccm\\\\react\\\\src\\\\pages\\\\ShowSurvey\\\\index.js\";\n// Detalhe de uma pesquisa\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport api from '../../services/api';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport './styles.css';\nimport { connect } from 'react-redux';\n\nfunction ShowSurvey({\n  user\n}) {\n  const location = useLocation();\n  const history = useHistory();\n  const [modules, setModules] = useState([]);\n  useEffect(() => {\n    async function loadModules() {\n      const response = await api.get('/modules/' + location.state.questionnaireID);\n      setModules(response.data);\n      console.log(\"Resposta\", modules);\n    }\n\n    loadModules();\n  }, []);\n\n  function getPtBrDate(somedate) {\n    //var today = new Date();\n    var dd = String(somedate.getDate()).padStart(2, '0');\n    var mm = String(somedate.getMonth() + 1).padStart(2, '0');\n    var yyyy = somedate.getFullYear();\n    return dd + '/' + mm + '/' + yyyy;\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"module\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \" Adicione um novo formul\\xE1rio na pesquisa:\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, location.state.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Vers\\xE3o: \", location.state.version), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"padding-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"Status: \", location.state.questionnaireStatus), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Data de cria\\xE7\\xE3o: \", location.state.creationDate), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"padding-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"\\xDAltima modifica\\xE7\\xE3o: \", location.state.lastModification), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 88\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modules-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \"FORMULARIO\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }, \"STATUS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, \"CRIADO EM\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, \"MODIFICADO EM\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, modules.map(q => /*#__PURE__*/React.createElement(\"tr\", {\n    key: q.questionnaireID,\n    \"data-key\": q.questionnaireID,\n    onClick: () => {\n      history.push('/show-survey/', {\n        questionnaireID: q.questionnaireID,\n        description: q.description,\n        version: q.version,\n        questionnaireStatus: q.questionnaireStatus,\n        lastModification: getPtBrDate(new Date(q.lastModification)),\n        creationDate: getPtBrDate(new Date(q.creationDate))\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, q.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, q.crfFormsStatus), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }, getPtBrDate(new Date(q.creationDate))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, getPtBrDate(new Date(q.lastModification)))))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"add-module\",\n    onClick: () => {\n      history.push('/add-module', {\n        questionnaireID: location.state.questionnaireID,\n        description: location.state.description,\n        version: location.state.version,\n        questionnaireStatus: location.state.questionnarieStatus,\n        lastModification: location.state.lastModification,\n        creationDate: location.state.creationDate\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }), \"Adicionar novo formul\\xE1rio de m\\xF3dulo +\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"add-module publish\",\n    onClick: () => {\n      history.push('/survey-publish');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), \"Publicar pesquisa\")));\n}\n\nexport default connect(state => ({\n  user: state.user\n}))(ShowSurvey);","map":{"version":3,"sources":["D:/xampp/htdocs/digital-form-oms-tccm/react/src/pages/ShowSurvey/index.js"],"names":["React","useState","useEffect","useHistory","useLocation","api","Button","TextField","CircularProgress","Add","Edit","connect","ShowSurvey","user","location","history","modules","setModules","loadModules","response","get","state","questionnaireID","data","console","log","getPtBrDate","somedate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","description","version","questionnaireStatus","creationDate","lastModification","map","q","push","Date","crfFormsStatus","questionnarieStatus"],"mappings":"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","sourcesContent":["// Detalhe de uma pesquisa\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport api from '../../services/api';\r\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\r\nimport { Add, Edit } from '@material-ui/icons';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ShowSurvey({user}) {\r\n\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\r\n\tconst [modules, setModules] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n        async function loadModules() {\r\n            const response = await api.get('/modules/'+location.state.questionnaireID);\r\n            setModules(response.data);\r\n\t\t\tconsole.log(\"Resposta\", modules);\r\n        }                                                                                                                                                                                                       \r\n        loadModules();\r\n    }, [])\r\n\r\n\tfunction getPtBrDate(somedate) {\r\n        //var today = new Date();\r\n        var dd = String(somedate.getDate()).padStart(2, '0');\r\n        var mm = String(somedate.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = somedate.getFullYear();\r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n\r\n\treturn (\r\n\r\n\t  <main className=\"container\">\r\n\t    <div className=\"module\">\r\n\t\t    <p> Adicione um novo formulário na pesquisa:</p>\r\n\t\t\t<h2>{location.state.description}</h2>\r\n\t\t\t<div className=\"survey-details\">\r\n\t\t\t\t<p>Versão: {location.state.version}</p><br/>\r\n\t\t\t\t<p className=\"padding-10\">Status: {location.state.questionnaireStatus}</p><br/>\r\n\t\t\t\t<p>Data de criação: {location.state.creationDate}</p><br/>\r\n\t\t\t\t<p className=\"padding-10\">Última modificação: {location.state.lastModification}</p><br/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modules-list\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>FORMULARIO</th>\r\n\t\t\t\t\t\t\t<th>STATUS</th>\r\n\t\t\t\t\t\t\t<th>CRIADO EM</th> \r\n\t\t\t\t\t\t\t<th>MODIFICADO EM</th> \r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n                              modules.map(q => ( \r\n                                    <tr key={q.questionnaireID} data-key={q.questionnaireID} onClick={ () => {\r\n                                    history.push('/show-survey/',\r\n\t\t\t\t\t\t\t\t\t{questionnaireID: q.questionnaireID, \r\n                                    description : q.description,\r\n                                    version : q.version,\r\n                                    questionnaireStatus : q.questionnaireStatus,\r\n                                    lastModification: getPtBrDate(new Date(q.lastModification)),\r\n                                    creationDate: getPtBrDate(new Date(q.creationDate))\r\n                                    })\r\n                                    }}>\r\n                                        <td>{q.description}</td>\r\n                                        <td>{q.crfFormsStatus}</td>\r\n                                        <td>{getPtBrDate(new Date(q.creationDate))}</td> \r\n                                        <td>{getPtBrDate(new Date(q.lastModification))}</td> \r\n                                    </tr>\r\n                               ))\r\n                     }\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t <Button variant=\"outlined\" color=\"primary\" className=\"add-module\" onClick={ () => {\r\n\t\t\t\thistory.push('/add-module',  \r\n\t\t\t\t{questionnaireID: location.state.questionnaireID, \r\n\t\t\t\t\t\t\t\t  description : location.state.description,\r\n                                  version : location.state.version,\r\n                                  questionnaireStatus : location.state.questionnarieStatus,\r\n                                  lastModification: location.state.lastModification,\r\n                                  creationDate: location.state.creationDate\r\n                })\r\n\t\t\t }}>\r\n\t\t\t\t<Add color=\"primary\" />\r\n\t\t\t\tAdicionar novo formulário de módulo +\r\n\t\t\t </Button><br/>\r\n\t\t\t  <Button variant=\"outlined\" color=\"primary\" className=\"add-module publish\" onClick={ () => {\r\n\t\t\t\thistory.push('/survey-publish')\r\n\t\t\t }}>\r\n\t\t\t\t<Add color=\"primary\" />\r\n\t\t\t\tPublicar pesquisa\r\n\t\t\t </Button>\r\n\t\t </div>\r\n      </main>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default connect(state => ({ user: state.user }))(ShowSurvey);"]},"metadata":{},"sourceType":"module"}