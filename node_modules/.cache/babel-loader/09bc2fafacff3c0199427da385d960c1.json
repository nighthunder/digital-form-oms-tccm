{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\digital-form-oms-tccm\\\\react\\\\src\\\\pages\\\\EditPublishedForm\\\\index.js\";\n// View do formulário quando � preenchido.\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { useLocation } from \"react-router-dom\";\nimport { TextField, Button, FormLabel, RadioGroup, Radio, FormControlLabel, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport api from '../../services/api';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport validFormDate from '../../utils/methods/validFormDate';\n\nfunction EditPublishedForm(_ref) {\n  let {\n    logged,\n    user,\n    participantId\n  } = _ref;\n  const location = useLocation();\n  console.log(\"Location Formulario\", location);\n  const titles = ['Admissão', 'Acompanhamento', 'Desfecho'];\n  const [form, setForm] = useState({});\n  const [formError, setFormError] = useState('');\n  const history = useHistory();\n  const [questions, setQuestions] = useState([]);\n  const [loadedResponses, setLoadedResponses] = useState(false);\n  useEffect(() => {\n    async function loadForm() {\n      const response = await api.get('/form/' + location.state.modulo);\n      setQuestions(response.data); // Caso seja uma atualização de formulário\n\n      if (location.state.formRecordId) {\n        getRecordedResponses(location.state.formRecordId);\n      }\n    }\n\n    loadForm();\n  }, []);\n\n  async function getRecordedResponses(formRecordId) {\n    const response = await api.get(`/formResponses/${formRecordId}`);\n    console.log('RESPOSTAS', response.data);\n\n    if (response.data) {\n      fillForm(response.data);\n    }\n  }\n\n  function fillForm(responses) {\n    let formWithResponse = {};\n\n    for (let response of responses) {\n      if (response.answer != null) {\n        if (response.rsp_listofvalue) formWithResponse[response.qstId] = response.rsp_listofvalue;else formWithResponse[response.qstId] = response.answer;\n      }\n    }\n\n    setForm(formWithResponse);\n    setLoadedResponses(true);\n  }\n\n  function getCurrentDate() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  function handleChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    console.log('idQuestão: ' + target.name, 'value: ' + target.value);\n    if (target.name == getIdFromDateQuestion() && formError) setFormError('');\n    setForm({ ...form,\n      [name]: value\n    });\n  }\n\n  function checkTitle(index, question) {\n    if (index - 1 < 0) {\n      return true;\n    }\n\n    if (typeof questions[index - 1].dsc_qst_grp == 'string') {\n      if (question.dsc_qst_grp !== questions[index - 1].dsc_qst_grp) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  function getIdFromDateQuestion() {\n    switch (location.state.modulo) {\n      case 1:\n        return 167;\n\n      case 2:\n        return 168;\n\n      case 3:\n        return 124;\n    }\n  }\n\n  async function submit(e) {\n    e.preventDefault();\n    console.log(form);\n    let request;\n    let dateQuestionId = getIdFromDateQuestion();\n    let response;\n    let validationDate = validFormDate(location.state.registeredModules, location.state.modulo, form[dateQuestionId], location.state.formRecordId ? true : false);\n    console.log(validationDate);\n\n    if (!validationDate.isValid) {\n      setFormError(validationDate.message);\n      return;\n    } // Caso seja uma atualização de formulário\n\n\n    if (location.state.formRecordId) {\n      console.log('ATUALIZA��O DO FORM ', location.state.formRecordId);\n      request = {\n        respostas: JSON.stringify(form),\n        info: user[location.state.hospitalIndex],\n        participantId: participantId,\n        dataAcompanhamento: form[dateQuestionId],\n        modulo: location.state.modulo,\n        formRecordId: location.state.formRecordId\n      };\n      console.log([request.info['userid'], request.info['grouproleid'], request.info['hospitalunitid'], request.participantId, 1, request.modulo, request.formRecordId, request.respostas]);\n      response = await api.put('/form/' + location.state.modulo, request);\n    } else {\n      // Caso seja um novo formulário\n      request = {\n        respostas: JSON.stringify(form),\n        info: user[location.state.hospitalIndex],\n        participantId: participantId,\n        dataAcompanhamento: form[dateQuestionId],\n        modulo: location.state.modulo\n      };\n      response = await api.post('/form/' + location.state.modulo, request);\n    }\n\n    console.log('response', response);\n    if (location.state.formRecordId) history.go(-1);else history.go(-2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, user[location.state.hospitalIndex].hospitalName, \" > \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 75\n    }\n  }, titles[location.state.modulo - 1])), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"pageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Editar M\\xF3dulo \", location.state.modulo, \" - \", titles[location.state.modulo - 1], \" - \", location.state.moduleStatus), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionnaireDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \" Question\\xE1rio: \", location.state.questionnaireDesc, \" ( \", location.state.questionnaireVers, \" ) \", location.state.questionnaireStatus, \"  \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"module\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, questions.length === 0 && (location.state.formRecordId ? !loadedResponses : true) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"assets/loading.svg\",\n    alt: \"Carregando\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  })), questions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qst\",\n    key: question.qstId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, question.dsc_qst_grp !== \"\" && checkTitle(index, question) && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"groupName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, \"Grupo de quest\\xF5es: \", question.dsc_qst_grp), question.qst_type === \"Date question\" && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputQst\",\n    value: question.dsc_qst,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type)), question.qst_type === \"Number question\" && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"questionDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type)), (question.qst_type === \"List question\" || question.qst_type === \"YNU_Question\" || question.qst_type === \"YNUN_Question\") && question.rsp_pad.split(',').length < 6 && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MuiTextField-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"questionDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subQstDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, \"Respostas padronizadas\"), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    native: true,\n    label: question.dsc_qst,\n    value: form[String(question.qstId)] || '',\n    \"aria-label\": question.dsc_qst,\n    name: String(question.qstId),\n    onChange: handleChange,\n    value: form[question.qstId] ? form[question.qstId] : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, question.rsp_pad.split(',').map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, item)))), (question.qst_type === \"List question\" || question.qst_type === \"YNU_Question\" || question.qst_type === \"YNUN_Question\") && question.rsp_pad.split(',').length >= 6 && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MuiTextField-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"questionDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subQstDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }, \"Respostas padronizadas\"), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    native: true,\n    label: question.dsc_qst,\n    value: form[String(question.qstId)] || '',\n    \"aria-label\": question.dsc_qst,\n    name: String(question.qstId),\n    onChange: handleChange,\n    value: form[question.qstId] ? form[question.qstId] : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, question.rsp_pad.split(',').map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 45\n    }\n  }, item)))), (question.qst_type === \"Text_Question\" || question.qst_type === \"Laboratory question\" || question.qst_type === \"Ventilation question\") && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"questionDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type)), question.qst_type === \"Boolean_Question\" && (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0) || question.sub_qst === '') && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MuiTextField-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"questionDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }, question.dsc_qst), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, \"Tipo da quest\\xE3o: \", question.qst_type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subQstDesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, \"Respostas padronizadas\"), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    native: true,\n    label: question.dsc_qst,\n    \"aria-label\": question.dsc_qst,\n    name: String(question.qstId),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    label: \"Sim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    label: \"N\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 40\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, \" \", formError, \" \"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, \"Editar formul\\xE1rio\")))));\n}\n\nexport default connect(state => ({\n  logged: state.logged,\n  user: state.user,\n  participantId: state.participantId\n}))(EditPublishedForm);","map":{"version":3,"sources":["D:/xampp/htdocs/digital-form-oms-tccm/react/src/pages/EditPublishedForm/index.js"],"names":["React","useState","useEffect","useLocation","TextField","Button","FormLabel","RadioGroup","Radio","FormControlLabel","InputLabel","Select","MenuItem","api","connect","useHistory","validFormDate","EditPublishedForm","logged","user","participantId","location","console","log","titles","form","setForm","formError","setFormError","history","questions","setQuestions","loadedResponses","setLoadedResponses","loadForm","response","get","state","modulo","data","formRecordId","getRecordedResponses","fillForm","responses","formWithResponse","answer","rsp_listofvalue","qstId","getCurrentDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","handleChange","e","target","value","name","getIdFromDateQuestion","checkTitle","index","question","dsc_qst_grp","submit","preventDefault","request","dateQuestionId","validationDate","registeredModules","isValid","message","respostas","JSON","stringify","info","hospitalIndex","dataAcompanhamento","put","post","go","hospitalName","moduleStatus","questionnaireDesc","questionnaireVers","questionnaireStatus","length","map","qst_type","sub_qst","Number","dsc_qst","rsp_pad","split","item"],"mappings":"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","sourcesContent":["// View do formulário quando � preenchido.\r\nimport React, { useState, useEffect  } from 'react';\r\nimport './styles.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { TextField, Button, FormLabel, RadioGroup, Radio, FormControlLabel, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport api from '../../services/api';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport validFormDate from '../../utils/methods/validFormDate';\r\n\r\nfunction EditPublishedForm({logged, user, participantId}) {\r\n\r\n    const location = useLocation();\r\n\r\n    console.log(\"Location Formulario\", location);\r\n\r\n    const titles = ['Admissão','Acompanhamento','Desfecho']\r\n\r\n    const [form, setForm] = useState({\r\n\r\n    });\r\n\r\n    const [formError, setFormError] = useState('')\r\n\r\n    const history = useHistory();\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loadedResponses, setLoadedResponses] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function loadForm() {\r\n            const response = await api.get('/form/' + location.state.modulo);\r\n            setQuestions(response.data);\r\n\r\n            // Caso seja uma atualização de formulário\r\n            if(location.state.formRecordId) {\r\n                getRecordedResponses(location.state.formRecordId)\r\n            }\r\n        }\r\n        loadForm();\r\n    }, [])\r\n\r\n    async function getRecordedResponses(formRecordId) {\r\n        const response = await api.get(`/formResponses/${formRecordId}`);\r\n        console.log('RESPOSTAS', response.data);\r\n        if(response.data) {\r\n            fillForm(response.data);\r\n        }\r\n    }\r\n\r\n    function fillForm(responses) {\r\n        let formWithResponse = { }\r\n        for(let response of responses) {\r\n            if(response.answer != null) {\r\n                if(response.rsp_listofvalue)\r\n                    formWithResponse[response.qstId] = response.rsp_listofvalue\r\n                else\r\n                    formWithResponse[response.qstId] = response.answer\r\n            }\r\n        }\r\n\r\n        setForm(formWithResponse);\r\n        setLoadedResponses(true)\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = today.getFullYear();\r\n\r\n        return yyyy + '-' + mm + '-' + dd;\r\n    }\r\n\r\n    function handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        console.log('idQuestão: ' + target.name, 'value: ' + target.value);\r\n\r\n        if(target.name == getIdFromDateQuestion() && formError)\r\n            setFormError('')\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    function checkTitle(index, question) {\r\n        if(index-1 < 0) {\r\n            return true;\r\n        }\r\n        if(typeof(questions[index - 1].dsc_qst_grp) == 'string') {\r\n            if(question.dsc_qst_grp !== questions[index - 1].dsc_qst_grp) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function getIdFromDateQuestion() {\r\n        switch (location.state.modulo) {\r\n            case 1:\r\n                return 167\r\n            case 2:\r\n                return 168\r\n            case 3:\r\n                return 124\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    async function submit(e) {\r\n        e.preventDefault();\r\n        console.log(form);\r\n\r\n        let request;\r\n        let dateQuestionId = getIdFromDateQuestion();\r\n        let response;\r\n\r\n        let validationDate = validFormDate(location.state.registeredModules, location.state.modulo, form[dateQuestionId], location.state.formRecordId ? true : false)\r\n        console.log(validationDate);\r\n\r\n        if(!validationDate.isValid) {\r\n            setFormError(validationDate.message);\r\n            return;\r\n        }\r\n\r\n        // Caso seja uma atualização de formulário\r\n        if(location.state.formRecordId) {\r\n            console.log('ATUALIZA��O DO FORM ', location.state.formRecordId);\r\n\r\n            request = {\r\n                respostas: JSON.stringify(form),\r\n                info: user[location.state.hospitalIndex],\r\n                participantId: participantId,\r\n                dataAcompanhamento: form[dateQuestionId],\r\n                modulo: location.state.modulo,\r\n                formRecordId: location.state.formRecordId\r\n            }\r\n\r\n\r\n            console.log( [ request.info['userid'], request.info['grouproleid'], request.info['hospitalunitid'], request.participantId, 1, request.modulo, request.formRecordId, request.respostas ]);\r\n\r\n            response = await api.put('/form/' + location.state.modulo, request);\r\n            \r\n        } else { // Caso seja um novo formulário\r\n            request = {\r\n                respostas: JSON.stringify(form),\r\n                info: user[location.state.hospitalIndex],\r\n                participantId: participantId,\r\n                dataAcompanhamento: form[dateQuestionId],\r\n                modulo: location.state.modulo\r\n            }\r\n    \r\n            response = await api.post('/form/' + location.state.modulo, request);\r\n        }\r\n        \r\n\r\n        console.log('response',response);\r\n\r\n        if(location.state.formRecordId)\r\n            history.go(-1);\r\n        else\r\n            history.go(-2);\r\n    }\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <div>\r\n                <header className=\"index\">\r\n                    { user[location.state.hospitalIndex].hospitalName } > <b>{ titles[location.state.modulo-1] }</b>\r\n                </header>\r\n                <h2 className=\"pageTitle\">Editar Módulo { location.state.modulo } - { titles[location.state.modulo-1] } - {location.state.moduleStatus}</h2>\r\n                <p className=\"questionnaireDesc\"> Questionário: {location.state.questionnaireDesc} ( {location.state.questionnaireVers} ) {location.state.questionnaireStatus}  </p>\r\n                <form className=\"module\" onSubmit={submit}>\r\n                    <div>\r\n                    { questions.length === 0 && (location.state.formRecordId ? !loadedResponses : true) &&\r\n                        <div className=\"loading\">\r\n                            <img src=\"assets/loading.svg\" alt=\"Carregando\"/>\r\n                        </div>\r\n                    }\r\n                    {questions.map((question, index) => (\r\n                        <div className=\"qst\" key={question.qstId}>\r\n\r\n                            {/* Se for um novo grupo de questões*/}\r\n                            { (question.dsc_qst_grp !== \"\" && checkTitle(index, question)) &&\r\n                            <h3 className=\"groupName\">Grupo de questões: {question.dsc_qst_grp}</h3>\r\n                            }\r\n\r\n                            {/* Se for do tipo Date question*/}\r\n                            { (question.qst_type === \"Date question\") && \r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div>\r\n                                <TextField className=\"inputQst\" value={question.dsc_qst}>{question.dsc_qst}</TextField>\r\n                                <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                            </div>\r\n                            }\r\n\r\n                            {/* Se for do tipo Number question*/}\r\n                            { (question.qst_type === \"Number question\") && \r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div>\r\n                            {/*<TextField type=\"number\" name={String(question.qstId)} label={question.dsc_qst} onChange={handleChange} value={form[question.qstId] ? form[question.qstId] : '' } />*/}\r\n                            <h4 className=\"questionDesc\">{question.dsc_qst}</h4>\r\n                            <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                            </div>\r\n                            }\r\n\r\n                            {/* Se for do tipo List question ou YNU_Question ou YNUN_Question e tenha menos de 6 opções */}\r\n                            { (question.qst_type === \"List question\" || question.qst_type === \"YNU_Question\" || question.qst_type === \"YNUN_Question\") && ( (question.rsp_pad.split(',')).length < 6 ) &&\r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div className=\"MuiTextField-root\">\r\n                                <h4 className=\"questionDesc\">{question.dsc_qst}</h4>\r\n                                <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                                <p className=\"subQstDesc\">Respostas padronizadas</p>\r\n                                <Select multiple native label={question.dsc_qst} value={form[String(question.qstId)] || ''} aria-label={question.dsc_qst} name={String(question.qstId)} onChange={handleChange} value={form[question.qstId] ? form[question.qstId] : '' }>\r\n                                        {question.rsp_pad.split(',').map((item) => (\r\n                                            <option key={item} value={item}>{ item }</option>\r\n                                        ))}\r\n                                </Select>\r\n                            </div>\r\n                            } \r\n\r\n                            {/* Se for do tipo List question ou YNU_Question ou YNUN_Question e tenha 6 ou mais opções */}\r\n                            { (question.qst_type === \"List question\" || question.qst_type === \"YNU_Question\" || question.qst_type === \"YNUN_Question\") && ( (question.rsp_pad.split(',')).length >= 6 ) &&\r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div className=\"MuiTextField-root\">\r\n                                <h4 className=\"questionDesc\">{question.dsc_qst}</h4>\r\n                                <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                                <p className=\"subQstDesc\">Respostas padronizadas</p>\r\n                                <Select multiple native label={question.dsc_qst} value={form[String(question.qstId)] || ''} aria-label={question.dsc_qst} name={String(question.qstId)} onChange={handleChange} value={form[question.qstId] ? form[question.qstId] : '' }>\r\n                                        {question.rsp_pad.split(',').map((item) => (\r\n                                            <option key={item} value={item}>{ item }</option>\r\n                                        ))}\r\n                                </Select>\r\n                                \r\n                            </div>\r\n                            } \r\n\r\n                            {/* Se for do tipo Text_Question ou Laboratory question ou Ventilation question*/}\r\n                            { (question.qst_type === \"Text_Question\" || question.qst_type === \"Laboratory question\" || question.qst_type === \"Ventilation question\") && \r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div>\r\n                            {/*<TextField name={String(question.qstId)} label={question.dsc_qst} onChange={handleChange} value={form[question.qstId] ? form[question.qstId] : '' }/>*/}\r\n                            <h4 className=\"questionDesc\">{question.dsc_qst}</h4>\r\n                            <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                            </div>\r\n                            }\r\n\r\n                            {/* Se for do tipo Boolean_Question*/}\r\n                            { (question.qst_type === \"Boolean_Question\") && \r\n                                ( (question.sub_qst !== '' && (form[question['idsub_qst']] === 'Sim' || Number(form[question['idsub_qst']] + 1) > 0)) || question.sub_qst === '') &&\r\n                            <div className=\"MuiTextField-root\">\r\n                                <h4 className=\"questionDesc\">{question.dsc_qst}</h4>\r\n                                <p className=\"questionType\">Tipo da questão: {question.qst_type}</p>\r\n                                <p className=\"subQstDesc\">Respostas padronizadas</p>\r\n                                 <Select multiple native label={question.dsc_qst} aria-label={question.dsc_qst} name={String(question.qstId)} onChange={handleChange}>\r\n                                       <option value='true' label='Sim'/>\r\n                                       <option value='false' label='Não'/>\r\n                                </Select>\r\n                               \r\n                            </div>\r\n                            } \r\n\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n\r\n                    <div className=\"form-submit\">\r\n                        <p className=\"error\"> { formError } </p>\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">Editar formulário</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default connect(state => ({ logged: state.logged, user:state.user, participantId: state.participantId }))(EditPublishedForm);"]},"metadata":{},"sourceType":"module"}